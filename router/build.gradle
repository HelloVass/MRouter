apply plugin: 'com.android.library'

ext {
    bintrayName = 'mrouter'
    libraryDescription = 'Android Modularization API'
    libraryVersion = MROUTER_VERSION
}

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as String
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
    compile project(':router-annotation')

}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}



apply plugin: 'com.github.dcendents.android-maven'



//compile 'com.chiclaim.modularization.mrouter:mylibrary:1.0.0'中的com.chiclaim.modularization.mrouter
group = "com.chiclaim.modularization.mrouter"   //一般填你唯一的包名

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name libraryDescription    //Description
                url siteUrl
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id 'chiclaim'
                        name 'chiclaim'
                        email 'chiclaim@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

apply plugin: 'com.jfrog.bintray'

version = libraryVersion


if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        failOnError false
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    //archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        userOrg = BINTRAY_ORGANIZATION //organization eg:ggz
        repo = BINTRAY_REPOSITORY  //repository       eg:maven
        name = bintrayName //the lib name in Bintray  eg:mrouter
        //以上三个属性组成的最终路径：ggz/maven/mrouter
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
    }
}
